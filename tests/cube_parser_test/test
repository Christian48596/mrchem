#!/usr/bin/env python3

from operator import is_
import sys
import numpy as np
from pathlib import Path

sys.path.append(str(Path(__file__).resolve().parents[2] / "python" / "mrchem" ))
print(str(Path(__file__).resolve().parents[2] / "python" / "mrchem" ))
from CUBEparser import parse_cube_file

def main():
    voxel_reference = np.array([-2.92929293, -1.31313131,  5.95959596,  4.34343434, 8.38383838,
            6.36363636, -6.16161616,  9.39393939,  1.71717172,  2.52525253,
        -9.39393939,  7.97979798, -3.33333333,  3.93939394,  7.17171717,
            0.1010101 , -9.5959596 ,  7.77777778, -5.15151515, -9.7979798 ,
            6.16161616,  1.91919192, -0.70707071, -5.35353535,  3.73737374,
        -8.78787879,  1.31313131])

    pc ={'hartree2simagnetizability': 78.9451185,
    'light_speed': 137.035999084,
    'angstrom2bohrs': 1.8897261246257702,
    'hartree2kjmol': 2625.4996394798254,
    'hartree2kcalmol': 627.5094740630558,
    'hartree2ev': 27.211386245988,
    'hartree2wavenumbers': 219474.6313632,
    'fine_structure_constant': 0.0072973525693,
    'electron_g_factor': -2.00231930436256,
    'dipmom_au2debye': 2.5417464739297717}

    world_unit = "bohr"
    test_files = ["phi_a_test_idx_0_re.cube" ,"phi_a_test_idx_1_re.cube", "phi_a_test_idx_2_re.cube", "phi_a_test_idx_3_re.cube"]
    parsed_cubes = [parse_cube_file(Path(test_path), world_unit, pc) for test_path in test_files]


    for elem in parsed_cubes:
        is_same = np.array_equal(voxel_reference, np.array(elem["CUBE_data"][0]))

    if is_same:
        print("Parsed cubes are equal to reference")
    else:
        print("There are some differences between parsed cubes and reference")

    return is_same

if __name__ == '__main__':
    main()
